alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
alias sysCallNo S1;
sysCallNo = [physicalSP -1];
alias pId S2;
alias index S3;
alias i S4;
alias count S5;
alias freepage S6;
alias childPTBR S7;
alias newpage S8;
alias oldpage S9;
alias j S10;
alias childPhysSP S11;
if(sysCallNo == 8) then
	pId = 0;
	while(pId < 32) do
		if([READY_LIST + (pId*32) + 1] == 0) then
			break;
		endif;
		pId = pId + 1;
	endwhile;
	if(pId == 32) then
		[physicalSP -2] = -1;
		ireturn;
	endif;
	index = [READY_LIST + (pId*32)];
	[index] = pId;
	i =1;
	count = 0;
	while(i<8) do
		if([PTBR + i] == "01" || [PTBR + i] == "11") then
			count = count + 1;
		endif;
		i = i+2;
	endwhile;
	i = 1280;
	while(i<1344) do
		if([i] == 0) then
			freepage = freepage+1;
		endif;
		i = i + 1;
	endwhile;
	if(count > freepage) then
		[physicalSP -2] = -1;
		ireturn;
	endif;
	childPTBR = 1024 + pId * 8;
	
	i =0;
	freepage = 1280;
	while(freepage < 1344 && i <8) do
		if([freepage] == 0) then
			newpage = (freepage -1280) * 512;
			while([freepage] == 0 && i<8 ) do
				if([PTBR + i + 1] == "01" || [PTBR + i + 1] == "11") then
					oldpage = [i + PTBR]*512;
					j = 0;
					while(j<512) do
						[newpage + j] = [oldpage + j];
						j = j+1;
					endwhile;
					[i + childPTBR + 1] = freepage - 1280;
					[freepage] = 1;
				else
					[i + childPTBR ] = -1;
				endif;
				[i + childPTBR + 1] = [i + PTBR + 1];
				i = i + 2;
			endwhile;
		endif;
		freepage = freepage + 1;
	endwhile;
	childPhysSP = ([childPTBR + 2 * ((SP -1) / 512)] * 512) + ((SP-1) % 512);
	[index + 1 ] = 1;
	[index + 2 ] = BP;
	[index + 3 ] = SP -1;
	[index + 4 ] = [physicalSP ];
	[index + 5 ] = childPTBR;
	[index + 6 ] = 4;
	[index + 7 ] = R0;
	[index + 8 ] = R1;
	[index + 9 ] = R2;
	[index + 10] = R3;
	[index + 11] = R4;
	[index + 12] = R5;
	[index + 13] = R6;
	[index + 14] = R7;
	
	[physicalSP -2] = pId;
	[childPhysSP - 1] = -2;
	
	ireturn;
endif;
